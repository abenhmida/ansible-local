---
- hosts: localhost
  become: true

  pre_tasks:
  - name: Get the uer running to playbook
    command: whoami
    become: no
    register: username_on_the_host

  - name: Get DEB architecture
    shell: dpkg --print-architecture
    register: deb_architecture

  - name: Get kernel version 
    shell: lsb_release -cs
    register: kernel
    
  - name: Print information
    debug:
      msg: |
        "deb_architecture.stdout: {{ deb_architecture.stdout }}"
        "lsb_release {{ kernel.stdout }}"
        "user {{ username_on_the_host }}"

  
  tasks:
    - name: Ensure old versions of docker uninstalled
      apt:
        pkg:
        - docker
        - docker-engine
        - docker-io
        - containerd
        - runc
        state:
         absent

    - name: "Remove old images, containers, volumes or custom configuration"
      file:
        path: "{{ item }}"
        state: absent
      with_items:
      - /var/lib/docker 
      - /var/lib/containerd
    
    - name: Install docker dependencies
      apt:
        pkg:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        state: present

    - name: "Ensure directory keyrings exists"
      file:
        path: /etc/apt/keyrings 
        mode: 755
        state: directory

    - name: Create Docker's official GPG key
      shell: >
        curl -fSsL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg 
        creates=/etc/apt/keyrings/docker.gpg 
  
    - name: Add Docker repository
      shell: >
        echo "deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu 
        {{ kernel.stdout }} stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: update cache
      apt: 
       update_cache: yes

    - name: Install Docker
      apt:
        pkg:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io 
        - docker-buildx-plugin 
        - docker-compose-plugin
        state: latest

  post_tasks:

  - name: Add docker group
    group: 
      name: docker
      state: present
  
  - name: Add user "{{ username_on_the_host.stdout }}" to docker group
    user:
      name: "{{ username_on_the_host.stdout }}"
      groups: docker
      append: yes

  - name: Restart docker service
    service:
      name: docker
      state: restarted
